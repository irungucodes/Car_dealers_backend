from marshmallow import fields, Schema

class UserSchema(Schema):
    id = fields.Integer(dump_only=True)
    first_name = fields.String(required=True)
    last_name = fields.String(required=True)
    email = fields.Email(required=True)
    image = fields.String(required=True)
    status = fields.String(required=True)
    role = fields.String(required=True)
    contact = fields.String(required=True)
    created_at = fields.DateTime(dump_only=True)
    updated_at = fields.DateTime(dump_only=True)
    inventory = fields.Nested('InventorySchema', many=True)
    sales = fields.Nested('SaleSchema', many=True)
    invoices = fields.Nested('InvoiceSchema', many=True)
    reports = fields.Nested('ReportSchema', many=True)
    notifications = fields.Nested('NotificationSchema', many=True)
    receipts = fields.Nested('ReceiptSchema', many=True)
    customers = fields.Nested('CustomerSchema', many=True)

class InventorySchema(Schema):
    id = fields.Integer(dump_only=True)
    make = fields.String(required=True)
    image = fields.String(required=True)
    price = fields.Integer(required=True)
    currency = fields.String(required=True)
    model = fields.String(required=True)
    year = fields.String(required=True)
    VIN = fields.Integer(required=True)
    color = fields.String(required=True)
    mileage = fields.Integer(required=True)
    body_style = fields.String(required=True)
    transmission = fields.String(required=True)
    fuel_type = fields.String(required=True)
    engine_size = fields.String(required=True)
    drive_type = fields.String(required=True)
    trim_level = fields.String(required=True)
    condition = fields.String(required=True)
    availability = fields.String(required=True)
    cylinder = fields.Integer()
    doors = fields.Integer(required=True)
    features = fields.String()
    stock_number = fields.Integer(required=True)
    purchase_cost = fields.Integer(required=True)
    profit = fields.Integer()
    user_id = fields.Integer(dump_only=True)
    created_at = fields.DateTime(dump_only=True)
    updated_at = fields.DateTime(dump_only=True)
    importation = fields.Nested('ImportationSchema', many=True)
    sales = fields.Nested('SaleSchema', many=True)
    invoices = fields.Nested('InvoiceSchema', many=True)
    reports = fields.Nested('ReportSchema', many=True)
    gallery = fields.Nested('GalleryImageSchema', many=True)

class ImportationSchema(Schema):
    id = fields.Integer(dump_only=True)
    country_of_origin = fields.String(required=True)
    transport_fee = fields.Integer(required=True)
    currency = fields.String(required=True)
    import_duty = fields.Integer(required=True)
    import_date = fields.String(required=True)
    import_document = fields.String(required=True)
    car_id = fields.Integer(required=True)
    created_at = fields.DateTime(dump_only=True)
    updated_at = fields.DateTime(dump_only=True)

class CustomerSchema(Schema):
    id = fields.Integer(dump_only=True)
    first_name = fields.String(required=True)
    last_name = fields.String(required=True)
    email = fields.Email(required=True)
    address = fields.String(required=True)
    phone_number = fields.String(required=True)
    image = fields.String(required=True)
    seller_id = fields.Integer(dump_only=True)
    created_at = fields.DateTime(dump_only=True)
    updated_at = fields.DateTime(dump_only=True)
    sales = fields.Nested('SaleSchema', many=True)
    invoices = fields.Nested('InvoiceSchema', many=True)
    reports = fields.Nested('ReportSchema', many=True)
    notifications = fields.Nested('NotificationSchema', many=True)
    receipts = fields.Nested('ReceiptSchema', many=True)

class SaleSchema(Schema):
    id = fields.Integer(dump_only=True)
    commision = fields.Integer(required=True)
    status = fields.String(required=True)
    history = fields.String(required=True)
    discount = fields.Integer(required=True)
    sale_date = fields.String(required=True)
    customer_id = fields.Integer(dump_only=True)
    seller_id = fields.Integer(dump_only=True)
    inventory_id = fields.Integer(dump_only=True)
    promotions = fields.String(required=True)
    created_at = fields.DateTime(dump_only=True)
    updated_at = fields.DateTime(dump_only=True)
    invoices = fields.Nested('InvoiceSchema', many=True)

class InvoiceSchema(Schema):
    id = fields.Integer(dump_only=True)
    date_of_purchase = fields.String(required=True)
    method = fields.String(required=True)
    amount_paid = fields.Integer(required=True)
    fee = fields.Integer(required=True)
    tax = fields.Integer(required=True)
    currency = fields.String(required=True)
    balance = fields.Integer(required=True)
    total_amount = fields.Integer(required=True)
    installments = fields.Integer(required=True)
    pending_cleared = fields.String(required=True)
    signature = fields.String(required=True)
    warranty = fields.String(required=True)
    terms_and_conditions = fields.String(required=True)
    agreement_details = fields.String(required=True)
    additional_accessories = fields.String(required=True)
    notes_instructions = fields.String(required=True)
    payment_proof = fields.String(required=True)
    created_at = fields.DateTime(dump_only=True)
    updated_at = fields.DateTime(dump_only=True)

    seller = fields.Nested('UserSchema', dump_only=True)
    sale = fields.Nested('SaleSchema', dump_only=True)
    customer = fields.Nested('CustomerSchema', dump_only=True)
    vehicle = fields.Nested('InventorySchema', dump_only=True)


class ReportSchema(Schema):
    id = fields.Integer(dump_only=True)
    company_profit = fields.Integer(required=True)
    sale_id = fields.Integer(required=True)
    expenses = fields.Integer(required=True)
    inventory_id = fields.Integer(required=True)
    sale_date = fields.Integer(required=True)
    customer_id = fields.Integer(required=True)
    seller_id = fields.Integer(required=True)
    importation_id = fields.Integer(required=True)
    created_at = fields.DateTime(dump_only=True)
    updated_at = fields.DateTime(dump_only=True)

class NotificationSchema(Schema):
    id = fields.Integer(dump_only=True)
    user_id = fields.Integer(dump_only=True)
    customer_id = fields.Integer(dump_only=True)
    message = fields.String(required=True)
    notification_type = fields.String(required=True)
    created_at = fields.DateTime(dump_only=True)
    updated_at = fields.DateTime(dump_only=True)

class ReceiptSchema(Schema):
    id = fields.Integer(dump_only=True)
    user_id = fields.Integer(dump_only=True)
    customer_id = fields.Integer(dump_only=True)
    invoice_id = fields.Integer(required=True)
    amount_paid = fields.Integer(required=True)
    created_at = fields.DateTime(dump_only=True)
    updated_at = fields.DateTime(dump_only=True)

class GalleryImageSchema(Schema):
    id = fields.Integer(dump_only=True)
    url = fields.String(required=True)
    inventory_id = fields.Integer(required=True)
    created_at = fields.DateTime(dump_only=True)
    updated_at = fields.DateTime(dump_only=True)
